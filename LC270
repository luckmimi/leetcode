# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def closestValue(self, root: Optional[TreeNode], target: float) -> int:
        self.res = None
        def dfs(root,min_diff):
            if not root:
                return
            #print(abs(root.val - target),min_diff)
            if abs(root.val - target) <= min_diff:
               
                self.res = root.val
                min_diff = abs(root.val - target)
            dfs(root.left, min_diff)
            dfs(root.right, min_diff)
          
        
            
        
        dfs(root,float('inf'))
        return self.res
