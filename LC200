class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        visited = [0]*len(grid)
        for i in range(len(grid)):
            visited[i] = [0]*len(grid[0])
        res = 0 
        def dfs(i,j,grid,visited):
            if i < 0 or i >len(grid) -1 or j < 0 or j > len(grid[0]) - 1 or grid[i][j] =='0' or visited[i][j] == 1:
                return
            visited[i][j] = 1
            dfs(i+1,j,grid,visited)
            dfs(i,j + 1, grid, visited)
            dfs(i-1,j,grid,visited)
            dfs(i,j - 1, grid, visited)
            
            
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == '1' and visited[i][j] == 0:
                    dfs(i,j,grid,visited)
                    res += 1
        return res
