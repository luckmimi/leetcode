# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        def dfs(root,s,target):
            if not root:
                return ''
            if not root.left and not root.right:
                tmp1 =( s+','+str(root.val)).split(',')
                tmp = [int(i) for i in tmp1 if i != '']
                if sum(tmp) == target:
                    self.ans.append(tmp)
            dfs(root.left,s+','+str(root.val),target)
            dfs(root.right,s+','+str(root.val),target)
        self.ans = []
        dfs(root,'',targetSum)
        return self.ans 
