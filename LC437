# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> int:
        def dfs(root,target, cur,dict):
            if not root:
                return
            cur += root.val
            prev = cur - target
            self.res += dict.get(prev,0)
            dict[cur] = dict.get(cur,0) + 1
            dfs(root.left,target, cur,dict)
            dfs(root.right,target, cur,dict)
            dict[cur] -= 1
        
        self.res = 0 
        dict = {0:1}
        dfs(root,targetSum,0,dict)
        return self.res
